
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR ID INT PAS_AND PAS_ARRAY PAS_BEGIN PAS_BREAK PAS_CASE PAS_CONST PAS_CONTINUE PAS_DEFAULT PAS_DIV PAS_DO PAS_DOWNTO PAS_ELSE PAS_END PAS_EXIT PAS_FILE PAS_FOR PAS_FORWARD PAS_FUNCTION PAS_GOTO PAS_IF PAS_IN PAS_LABEL PAS_MOD PAS_NIL PAS_NOT PAS_OF PAS_OR PAS_PACKED PAS_PROCEDURE PAS_PROGRAM PAS_READ PAS_RECORD PAS_REPEAT PAS_SET PAS_SIZEOF PAS_THEN PAS_TO PAS_TYPE PAS_UNTIL PAS_VAR PAS_WHILE PAS_WITH PAS_XOR REAL STR SYM_ADD SYM_ASSIGN SYM_AT SYM_CARET SYM_COLON SYM_COMMA SYM_DIV SYM_EQ SYM_GE SYM_GT SYM_LBRAC SYM_LE SYM_LPAREN SYM_LT SYM_MUL SYM_NE SYM_PERIOD SYM_RANGE SYM_RBRAC SYM_RPAREN SYM_SEMICOLON SYM_SUB SYS_CON SYS_FUNCT SYS_PROC SYS_TYPEprogram : program_head  routine  SYM_PERIODprogram_head : PAS_PROGRAM  ID  SYM_SEMICOLONroutine : routine_head  routine_bodysub_routine : routine_head  routine_bodyroutine_head : label_part  const_part  type_part  var_part  routine_partlabel_part : emptyconst_part : PAS_CONST  const_expr_listconst_part : emptyconst_expr_list : const_expr_list  ID  SYM_EQ  const_value  SYM_SEMICOLONconst_expr_list : ID  SYM_EQ  const_value  SYM_SEMICOLONconst_value : INTconst_value : REALconst_value : CHARconst_value : STRconst_value : SYS_CONtype_part : PAS_TYPE type_decl_listtype_part : emptytype_decl_list : type_decl_list  type_definitiontype_decl_list : type_definitiontype_definition : ID  SYM_EQ  type_decl  SYM_SEMICOLONtype_decl : simple_type_decltype_decl : array_type_decltype_decl : record_type_declsimple_type_decl : SYS_TYPEsimple_type_decl : IDsimple_type_decl : SYM_LPAREN  name_list  SYM_RPAREN simple_type_decl : const_value  SYM_RANGE  const_value  simple_type_decl : SYM_SUB  const_value  SYM_RANGE  const_valuesimple_type_decl : SYM_SUB  const_value  SYM_RANGE  SYM_SUB  const_valuesimple_type_decl : ID  SYM_RANGE  IDarray_type_decl : PAS_ARRAY  SYM_LBRAC  simple_type_decl  SYM_RBRAC  PAS_OF  type_declrecord_type_decl : PAS_RECORD  field_decl_list  PAS_ENDfield_decl_list : field_decl_list  field_declfield_decl_list : field_declfield_decl : name_list  SYM_COLON  type_decl  SYM_SEMICOLONname_list : name_list  SYM_COMMA  IDname_list : IDvar_part : PAS_VAR  var_decl_listvar_part : emptyvar_decl_list : var_decl_list  var_declvar_decl_list : var_declvar_decl :  name_list  SYM_COLON  type_decl  SYM_SEMICOLONroutine_part : routine_part  function_declroutine_part : routine_part  procedure_declroutine_part : function_declroutine_part : procedure_declroutine_part : emptyfunction_decl : function_head  SYM_SEMICOLON  sub_routine  SYM_SEMICOLONfunction_head :  PAS_FUNCTION  ID  parameters  SYM_COLON  simple_type_decl procedure_decl :  procedure_head  SYM_SEMICOLON  sub_routine  SYM_SEMICOLONprocedure_head : PAS_PROCEDURE ID parameters parameters : SYM_LPAREN  para_decl_list  SYM_RPARENparameters : emptypara_decl_list : para_decl_list  SYM_SEMICOLON  para_type_listpara_decl_list : para_type_listpara_type_list : var_para_list SYM_COLON simple_type_decl  para_type_list : val_para_list  SYM_COLON  simple_type_declvar_para_list : PAS_VAR  name_listval_para_list : name_listroutine_body : compound_stmtcompound_stmt : PAS_BEGIN  stmt_list  PAS_ENDstmt_list : stmt_list  stmt  SYM_SEMICOLONstmt_list : emptystmt : INT  SYM_COLON  non_label_stmtstmt : non_label_stmtnon_label_stmt : assign_stmtnon_label_stmt : proc_stmtnon_label_stmt : compound_stmtnon_label_stmt : if_stmtnon_label_stmt : repeat_stmtnon_label_stmt : while_stmt non_label_stmt : for_stmtnon_label_stmt : case_stmtnon_label_stmt : goto_stmtassign_stmt : ID  SYM_ASSIGN  expressionassign_stmt : ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expressionassign_stmt : ID  SYM_PERIOD  ID  SYM_ASSIGN  expressionproc_stmt : IDproc_stmt : ID  SYM_LPAREN  args_list  SYM_RPARENproc_stmt : SYS_PROCproc_stmt : SYS_PROC  SYM_LPAREN  expression_list  SYM_RPARENproc_stmt : PAS_READ  SYM_LPAREN  factor  SYM_RPARENif_stmt : PAS_IF  expression  PAS_THEN  stmt  else_clauseelse_clause : PAS_ELSE stmtelse_clause : emptyrepeat_stmt : PAS_REPEAT  stmt_list  PAS_UNTIL  expressionwhile_stmt : PAS_WHILE  expression  PAS_DO stmtfor_stmt : PAS_FOR  ID  SYM_ASSIGN  expression  direction  expression PAS_DO stmtdirection : PAS_TOdirection : PAS_DOWNTOcase_stmt : PAS_CASE expression PAS_OF case_expr_list  PAS_ENDcase_expr_list : case_expr_list  case_exprcase_expr_list : case_exprcase_expr : const_value  SYM_COLON  stmt  SYM_SEMICOLONcase_expr : ID  SYM_COLON  stmt  SYM_SEMICOLONgoto_stmt : PAS_GOTO  INTexpression_list : expression_list  SYM_COMMA  expressionexpression_list : expressionexpression : expression  SYM_GE  exprexpression : expression  SYM_GT  exprexpression : expression  SYM_LE  exprexpression : expression  SYM_LT  exprexpression : expression  SYM_EQ  expr  expression : expression  SYM_NE  exprexpression : exprexpr : expr  SYM_ADD  termexpr : expr  SYM_SUB  termexpr : expr  PAS_OR  termexpr : termterm : term  SYM_MUL  factorterm : term  SYM_DIV  factorterm : term  PAS_MOD  factor term : term  PAS_AND  factorterm   : factorfactor : IDfactor : ID  SYM_LPAREN  args_list  SYM_RPARENfactor : SYS_FUNCTfactor : SYS_FUNCT  SYM_LPAREN  args_list  SYM_RPARENfactor : const_valuefactor : SYM_LPAREN  expression  SYM_RPARENfactor : PAS_NOT  factorfactor : SYM_SUB  factorfactor : ID  SYM_LBRAC  expression  SYM_RBRACfactor : ID  SYM_PERIOD  IDargs_list : args_list  SYM_COMMA  expressionargs_list : expressionempty : '
    
_lr_action_items = {'PAS_PROGRAM':([0,],[3,]),'$end':([1,9,],[0,-1,]),'PAS_CONST':([2,6,7,16,134,135,],[-127,14,-6,-2,-127,-127,]),'PAS_TYPE':([2,6,7,13,15,16,22,134,135,153,205,],[-127,-127,-6,20,-8,-2,-7,-127,-127,-10,-9,]),'PAS_VAR':([2,6,7,13,15,16,19,21,22,49,50,94,134,135,153,191,197,205,249,],[-127,-127,-6,-127,-8,-2,47,-17,-7,-16,-19,-18,-127,-127,-10,231,-20,-9,231,]),'PAS_FUNCTION':([2,6,7,13,15,16,19,21,22,46,48,49,50,82,83,84,85,90,91,94,132,133,134,135,138,153,197,205,223,225,233,],[-127,-127,-6,-127,-8,-2,-127,-17,-7,88,-39,-16,-19,88,-45,-46,-47,-38,-41,-18,-43,-44,-127,-127,-40,-10,-20,-9,-48,-50,-42,]),'PAS_PROCEDURE':([2,6,7,13,15,16,19,21,22,46,48,49,50,82,83,84,85,90,91,94,132,133,134,135,138,153,197,205,223,225,233,],[-127,-127,-6,-127,-8,-2,-127,-17,-7,89,-39,-16,-19,89,-45,-46,-47,-38,-41,-18,-43,-44,-127,-127,-40,-10,-20,-9,-48,-50,-42,]),'PAS_BEGIN':([2,5,6,7,12,13,15,16,17,18,19,21,22,41,46,48,49,50,54,55,77,82,83,84,85,90,91,94,107,129,132,133,134,135,138,153,188,197,205,211,221,222,223,225,233,257,],[-127,12,-127,-6,-127,-127,-8,-2,12,-63,-127,-17,-7,-127,-127,-39,-16,-19,-62,12,12,-5,-45,-46,-47,-38,-41,-18,12,12,-43,-44,-127,-127,-40,-10,12,-20,-9,12,12,12,-48,-50,-42,12,]),'ID':([3,12,14,17,18,20,22,40,41,42,43,44,47,49,50,54,55,56,57,58,59,60,61,65,68,71,77,88,89,90,91,94,95,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,126,128,129,130,131,138,139,140,147,151,153,155,157,159,183,184,191,196,197,201,202,203,205,206,211,216,217,218,220,221,222,226,231,233,240,241,249,250,251,257,258,259,264,265,],[8,-127,23,37,-63,51,52,67,-127,67,79,67,93,51,-19,-62,37,67,67,101,67,67,67,67,67,67,37,136,137,93,-41,-18,141,37,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,177,67,67,37,67,186,-40,141,195,93,93,-10,67,67,67,186,-93,93,234,-20,141,93,-34,-9,67,37,67,-89,-90,-92,37,37,141,93,-42,-33,141,93,141,141,37,-94,-95,141,-35,]),'SYM_PERIOD':([4,10,11,24,37,67,],[9,-3,-60,-61,58,124,]),'SYM_SEMICOLON':([8,11,24,25,27,28,29,30,31,32,33,34,35,36,37,38,63,64,66,67,69,70,72,73,74,75,76,81,86,87,97,98,99,121,127,137,141,142,143,144,145,146,152,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,180,181,187,189,192,193,194,207,210,212,213,214,215,219,224,227,228,234,235,236,239,242,243,245,246,247,248,254,256,260,261,262,263,266,267,],[16,-60,-61,54,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-78,-80,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-96,134,135,153,-64,-75,-122,-121,-127,-25,197,-21,-22,-23,-24,205,-79,-81,-82,-127,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,-124,-120,-86,-87,223,225,-53,-51,233,-77,-83,-85,-116,-123,-118,-91,-4,249,-55,-30,-26,-27,-32,-76,-84,258,259,-49,-52,-28,265,-54,-56,-57,-29,-88,-31,]),'PAS_END':([12,17,18,54,183,184,202,203,220,240,258,259,265,],[-127,24,-63,-62,219,-93,239,-34,-92,-33,-94,-95,-35,]),'INT':([12,17,18,40,41,42,44,45,53,54,56,57,59,60,61,65,68,71,77,95,96,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,129,130,131,139,149,155,157,159,183,184,199,201,206,211,216,217,218,220,221,222,226,237,241,250,251,253,257,258,259,264,],[-127,26,-63,72,-127,72,72,81,72,-62,72,72,72,72,72,72,72,72,26,72,72,26,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,26,72,72,72,72,72,72,72,72,-93,72,72,72,26,72,-89,-90,-92,26,26,72,72,72,72,72,72,26,-94,-95,72,]),'SYS_PROC':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,38,-63,-127,-62,38,38,38,38,38,38,38,38,]),'PAS_READ':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,39,-63,-127,-62,39,39,39,39,39,39,39,39,]),'PAS_IF':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,40,-63,-127,-62,40,40,40,40,40,40,40,40,]),'PAS_REPEAT':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,41,-63,-127,-62,41,41,41,41,41,41,41,41,]),'PAS_WHILE':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,42,-63,-127,-62,42,42,42,42,42,42,42,42,]),'PAS_FOR':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,43,-63,-127,-62,43,43,43,43,43,43,43,43,]),'PAS_CASE':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,44,-63,-127,-62,44,44,44,44,44,44,44,44,]),'PAS_GOTO':([12,17,18,41,54,55,77,107,129,211,221,222,257,],[-127,45,-63,-127,-62,45,45,45,45,45,45,45,45,]),'PAS_UNTIL':([18,41,54,77,],[-63,-127,-62,128,]),'SYM_EQ':([23,51,52,62,63,64,66,67,69,70,72,73,74,75,76,78,80,99,100,103,105,121,125,127,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,180,182,207,208,209,213,214,215,242,244,],[53,95,96,112,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,112,112,112,112,112,112,-122,112,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,112,-124,-120,112,112,112,112,112,-116,-123,-118,112,112,]),'PAS_ELSE':([24,27,28,29,30,31,32,33,34,35,36,37,38,63,64,66,67,69,70,72,73,74,75,76,81,98,99,121,127,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,180,181,207,210,212,213,214,215,219,242,243,266,],[-61,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-78,-80,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-96,-64,-75,-122,-121,-79,-81,-82,211,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,-124,-120,-86,-87,-77,-83,-85,-116,-123,-118,-91,-76,-84,-88,]),'SYM_COLON':([26,72,73,74,75,76,92,93,136,185,186,190,192,195,204,229,230,232,248,252,],[55,-11,-12,-13,-14,-15,139,-37,-127,221,222,226,-53,-36,241,250,251,-59,-52,-58,]),'SYM_ASSIGN':([37,79,101,154,],[56,130,155,206,]),'SYM_LBRAC':([37,67,150,],[57,123,201,]),'SYM_LPAREN':([37,38,39,40,42,44,56,57,59,60,61,65,67,68,69,71,95,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,136,137,139,155,157,159,201,206,216,217,218,226,241,250,251,264,],[59,60,61,68,68,68,68,68,68,68,68,68,122,68,126,68,147,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,191,191,147,68,68,68,147,68,68,-89,-90,147,147,147,147,147,]),'SYS_FUNCT':([40,42,44,56,57,59,60,61,65,68,71,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,155,157,159,206,216,217,218,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-89,-90,]),'PAS_NOT':([40,42,44,56,57,59,60,61,65,68,71,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,155,157,159,206,216,217,218,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-89,-90,]),'SYM_SUB':([40,42,44,56,57,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,95,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,127,128,130,139,155,157,159,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,201,206,213,214,215,216,217,218,226,237,241,250,251,264,],[65,65,65,65,65,65,65,65,115,-109,65,-114,-115,65,-117,-119,65,-11,-12,-13,-14,-15,149,65,65,65,65,65,65,65,65,65,65,65,65,65,-122,65,65,65,-121,65,65,149,65,65,65,115,115,115,115,115,115,-106,-107,-108,-110,-111,-112,-113,-124,-120,149,65,-116,-123,-118,65,-89,-90,149,253,149,149,149,149,]),'REAL':([40,42,44,53,56,57,59,60,61,65,68,71,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,131,139,149,155,157,159,183,184,199,201,206,216,217,218,220,226,237,241,250,251,253,258,259,264,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-93,73,73,73,73,-89,-90,-92,73,73,73,73,73,73,-94,-95,73,]),'CHAR':([40,42,44,53,56,57,59,60,61,65,68,71,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,131,139,149,155,157,159,183,184,199,201,206,216,217,218,220,226,237,241,250,251,253,258,259,264,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-93,74,74,74,74,-89,-90,-92,74,74,74,74,74,74,-94,-95,74,]),'STR':([40,42,44,53,56,57,59,60,61,65,68,71,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,131,139,149,155,157,159,183,184,199,201,206,216,217,218,220,226,237,241,250,251,253,258,259,264,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-93,75,75,75,75,-89,-90,-92,75,75,75,75,75,75,-94,-95,75,]),'SYS_CON':([40,42,44,53,56,57,59,60,61,65,68,71,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,131,139,149,155,157,159,183,184,199,201,206,216,217,218,220,226,237,241,250,251,253,258,259,264,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-93,76,76,76,76,-89,-90,-92,76,76,76,76,76,76,-94,-95,76,]),'PAS_THEN':([62,63,64,66,67,69,70,72,73,74,75,76,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,213,214,215,],[107,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,-124,-120,-116,-123,-118,]),'SYM_GE':([62,63,64,66,67,69,70,72,73,74,75,76,78,80,99,100,103,105,121,125,127,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,180,182,207,208,209,213,214,215,242,244,],[108,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,108,108,108,108,108,108,-122,108,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,108,-124,-120,108,108,108,108,108,-116,-123,-118,108,108,]),'SYM_GT':([62,63,64,66,67,69,70,72,73,74,75,76,78,80,99,100,103,105,121,125,127,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,180,182,207,208,209,213,214,215,242,244,],[109,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,109,109,109,109,109,109,-122,109,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,109,-124,-120,109,109,109,109,109,-116,-123,-118,109,109,]),'SYM_LE':([62,63,64,66,67,69,70,72,73,74,75,76,78,80,99,100,103,105,121,125,127,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,180,182,207,208,209,213,214,215,242,244,],[110,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,110,110,110,110,110,110,-122,110,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,110,-124,-120,110,110,110,110,110,-116,-123,-118,110,110,]),'SYM_LT':([62,63,64,66,67,69,70,72,73,74,75,76,78,80,99,100,103,105,121,125,127,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,180,182,207,208,209,213,214,215,242,244,],[111,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,111,111,111,111,111,111,-122,111,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,111,-124,-120,111,111,111,111,111,-116,-123,-118,111,111,]),'SYM_NE':([62,63,64,66,67,69,70,72,73,74,75,76,78,80,99,100,103,105,121,125,127,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,180,182,207,208,209,213,214,215,242,244,],[113,-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,113,113,113,113,113,113,-122,113,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,113,-124,-120,113,113,113,113,113,-116,-123,-118,113,113,]),'PAS_DO':([63,64,66,67,69,70,72,73,74,75,76,78,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,213,214,215,244,],[-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,129,-122,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,-124,-120,-116,-123,-118,257,]),'PAS_OF':([63,64,66,67,69,70,72,73,74,75,76,80,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,213,214,215,255,],[-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,131,-122,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,-124,-120,-116,-123,-118,264,]),'SYM_RBRAC':([63,64,66,67,69,70,72,73,74,75,76,100,121,127,141,146,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,213,214,215,234,235,236,238,254,263,],[-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,154,-122,-121,-25,-24,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,214,-124,-120,-116,-123,-118,-30,-26,-27,255,-28,-29,]),'SYM_RPAREN':([63,64,66,67,69,70,72,73,74,75,76,93,102,103,104,105,106,121,125,127,141,146,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,195,198,208,209,213,214,215,227,228,234,235,236,254,260,261,262,263,],[-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-37,156,-126,158,-98,160,-122,178,-121,-25,-24,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,213,-124,-120,215,-36,235,-125,-97,-116,-123,-118,248,-55,-30,-26,-27,-28,-54,-56,-57,-29,]),'SYM_COMMA':([63,64,66,67,69,70,72,73,74,75,76,92,93,102,103,104,105,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,195,198,204,208,209,213,214,215,232,252,],[-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,140,-37,157,-126,159,-98,-122,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,157,-124,-120,157,-36,140,140,-125,-97,-116,-123,-118,140,140,]),'PAS_TO':([63,64,66,67,69,70,72,73,74,75,76,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,182,213,214,215,],[-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,-124,-120,217,-116,-123,-118,]),'PAS_DOWNTO':([63,64,66,67,69,70,72,73,74,75,76,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,182,213,214,215,],[-105,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,-99,-100,-101,-102,-103,-104,-106,-107,-108,-110,-111,-112,-113,-124,-120,218,-116,-123,-118,]),'SYM_ADD':([63,64,66,67,69,70,72,73,74,75,76,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,213,214,215,],[114,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,114,114,114,114,114,114,-106,-107,-108,-110,-111,-112,-113,-124,-120,-116,-123,-118,]),'PAS_OR':([63,64,66,67,69,70,72,73,74,75,76,121,127,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,213,214,215,],[116,-109,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,116,116,116,116,116,116,-106,-107,-108,-110,-111,-112,-113,-124,-120,-116,-123,-118,]),'SYM_MUL':([64,66,67,69,70,72,73,74,75,76,121,127,168,169,170,171,172,173,174,177,178,213,214,215,],[117,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,117,117,117,-110,-111,-112,-113,-124,-120,-116,-123,-118,]),'SYM_DIV':([64,66,67,69,70,72,73,74,75,76,121,127,168,169,170,171,172,173,174,177,178,213,214,215,],[118,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,118,118,118,-110,-111,-112,-113,-124,-120,-116,-123,-118,]),'PAS_MOD':([64,66,67,69,70,72,73,74,75,76,121,127,168,169,170,171,172,173,174,177,178,213,214,215,],[119,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,119,119,119,-110,-111,-112,-113,-124,-120,-116,-123,-118,]),'PAS_AND':([64,66,67,69,70,72,73,74,75,76,121,127,168,169,170,171,172,173,174,177,178,213,214,215,],[120,-114,-115,-117,-119,-11,-12,-13,-14,-15,-122,-121,120,120,120,-110,-111,-112,-113,-124,-120,-116,-123,-118,]),'SYM_RANGE':([72,73,74,75,76,141,148,200,],[-11,-12,-13,-14,-15,196,199,237,]),'SYS_TYPE':([95,139,201,226,241,250,251,264,],[146,146,146,146,146,146,146,146,]),'PAS_ARRAY':([95,139,241,264,],[150,150,150,150,]),'PAS_RECORD':([95,139,241,264,],[151,151,151,151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_head':([0,],[2,]),'routine':([2,],[4,]),'routine_head':([2,134,135,],[5,188,188,]),'label_part':([2,134,135,],[6,6,6,]),'empty':([2,6,12,13,19,41,46,134,135,136,137,161,],[7,15,18,21,48,18,85,7,7,192,192,212,]),'routine_body':([5,188,],[10,224,]),'compound_stmt':([5,17,55,77,107,129,188,211,221,222,257,],[11,30,30,30,30,30,11,30,30,30,30,]),'const_part':([6,],[13,]),'stmt_list':([12,41,],[17,77,]),'type_part':([13,],[19,]),'const_expr_list':([14,],[22,]),'stmt':([17,77,107,129,211,221,222,257,],[25,25,161,181,243,245,246,266,]),'non_label_stmt':([17,55,77,107,129,211,221,222,257,],[27,98,27,27,27,27,27,27,27,]),'assign_stmt':([17,55,77,107,129,211,221,222,257,],[28,28,28,28,28,28,28,28,28,]),'proc_stmt':([17,55,77,107,129,211,221,222,257,],[29,29,29,29,29,29,29,29,29,]),'if_stmt':([17,55,77,107,129,211,221,222,257,],[31,31,31,31,31,31,31,31,31,]),'repeat_stmt':([17,55,77,107,129,211,221,222,257,],[32,32,32,32,32,32,32,32,32,]),'while_stmt':([17,55,77,107,129,211,221,222,257,],[33,33,33,33,33,33,33,33,33,]),'for_stmt':([17,55,77,107,129,211,221,222,257,],[34,34,34,34,34,34,34,34,34,]),'case_stmt':([17,55,77,107,129,211,221,222,257,],[35,35,35,35,35,35,35,35,35,]),'goto_stmt':([17,55,77,107,129,211,221,222,257,],[36,36,36,36,36,36,36,36,36,]),'var_part':([19,],[46,]),'type_decl_list':([20,],[49,]),'type_definition':([20,49,],[50,94,]),'expression':([40,42,44,56,57,59,60,68,122,123,126,128,130,155,157,159,206,216,],[62,78,80,99,100,103,105,125,103,176,103,180,182,207,208,209,242,244,]),'expr':([40,42,44,56,57,59,60,68,108,109,110,111,112,113,122,123,126,128,130,155,157,159,206,216,],[63,63,63,63,63,63,63,63,162,163,164,165,166,167,63,63,63,63,63,63,63,63,63,63,]),'term':([40,42,44,56,57,59,60,68,108,109,110,111,112,113,114,115,116,122,123,126,128,130,155,157,159,206,216,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,168,169,170,64,64,64,64,64,64,64,64,64,64,]),'factor':([40,42,44,56,57,59,60,61,65,68,71,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,155,157,159,206,216,],[66,66,66,66,66,66,66,106,121,66,127,66,66,66,66,66,66,66,66,66,171,172,173,174,66,66,66,66,66,66,66,66,66,66,]),'const_value':([40,42,44,53,56,57,59,60,61,65,68,71,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,126,128,130,131,139,149,155,157,159,183,199,201,206,216,226,237,241,250,251,253,264,],[70,70,70,97,70,70,70,70,70,70,70,70,148,152,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,185,148,200,70,70,70,185,236,148,70,70,148,254,148,148,148,263,148,]),'routine_part':([46,],[82,]),'function_decl':([46,82,],[83,132,]),'procedure_decl':([46,82,],[84,133,]),'function_head':([46,82,],[86,86,]),'procedure_head':([46,82,],[87,87,]),'var_decl_list':([47,],[90,]),'var_decl':([47,90,],[91,138,]),'name_list':([47,90,147,151,191,202,231,249,],[92,92,198,204,232,204,252,232,]),'args_list':([59,122,126,],[102,175,179,]),'expression_list':([60,],[104,]),'type_decl':([95,139,241,264,],[142,194,256,267,]),'simple_type_decl':([95,139,201,226,241,250,251,264,],[143,143,238,247,143,261,262,143,]),'array_type_decl':([95,139,241,264,],[144,144,144,144,]),'record_type_decl':([95,139,241,264,],[145,145,145,145,]),'case_expr_list':([131,],[183,]),'case_expr':([131,183,],[184,220,]),'sub_routine':([134,135,],[187,189,]),'parameters':([136,137,],[190,193,]),'field_decl_list':([151,],[202,]),'field_decl':([151,202,],[203,240,]),'else_clause':([161,],[210,]),'direction':([182,],[216,]),'para_decl_list':([191,],[227,]),'para_type_list':([191,249,],[228,260,]),'var_para_list':([191,249,],[229,229,]),'val_para_list':([191,249,],[230,230,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_head routine SYM_PERIOD','program',3,'p_program','parser.py',6),
  ('program_head -> PAS_PROGRAM ID SYM_SEMICOLON','program_head',3,'p_program_head','parser.py',10),
  ('routine -> routine_head routine_body','routine',2,'p_routine','parser.py',14),
  ('sub_routine -> routine_head routine_body','sub_routine',2,'p_sub_routine','parser.py',18),
  ('routine_head -> label_part const_part type_part var_part routine_part','routine_head',5,'p_routine_head','parser.py',22),
  ('label_part -> empty','label_part',1,'p_label_part','parser.py',27),
  ('const_part -> PAS_CONST const_expr_list','const_part',2,'p_const_part_0','parser.py',32),
  ('const_part -> empty','const_part',1,'p_const_part_1','parser.py',36),
  ('const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON','const_expr_list',5,'p_const_expr_list_0','parser.py',40),
  ('const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON','const_expr_list',4,'p_const_expr_list_1','parser.py',45),
  ('const_value -> INT','const_value',1,'p_const_value_0','parser.py',49),
  ('const_value -> REAL','const_value',1,'p_const_value_1','parser.py',53),
  ('const_value -> CHAR','const_value',1,'p_const_value_2','parser.py',57),
  ('const_value -> STR','const_value',1,'p_const_value_3','parser.py',61),
  ('const_value -> SYS_CON','const_value',1,'p_const_value_4','parser.py',65),
  ('type_part -> PAS_TYPE type_decl_list','type_part',2,'p_type_part_0','parser.py',70),
  ('type_part -> empty','type_part',1,'p_type_part_1','parser.py',74),
  ('type_decl_list -> type_decl_list type_definition','type_decl_list',2,'p_type_decl_list_0','parser.py',78),
  ('type_decl_list -> type_definition','type_decl_list',1,'p_type_decl_list_1','parser.py',83),
  ('type_definition -> ID SYM_EQ type_decl SYM_SEMICOLON','type_definition',4,'p_type_definition','parser.py',87),
  ('type_decl -> simple_type_decl','type_decl',1,'p_type_decl_0','parser.py',91),
  ('type_decl -> array_type_decl','type_decl',1,'p_type_decl_1','parser.py',95),
  ('type_decl -> record_type_decl','type_decl',1,'p_type_decl_2','parser.py',99),
  ('simple_type_decl -> SYS_TYPE','simple_type_decl',1,'p_simple_type_decl_0','parser.py',103),
  ('simple_type_decl -> ID','simple_type_decl',1,'p_simple_type_decl_1','parser.py',107),
  ('simple_type_decl -> SYM_LPAREN name_list SYM_RPAREN','simple_type_decl',3,'p_simple_type_decl_2','parser.py',111),
  ('simple_type_decl -> const_value SYM_RANGE const_value','simple_type_decl',3,'p_simple_type_decl_3','parser.py',115),
  ('simple_type_decl -> SYM_SUB const_value SYM_RANGE const_value','simple_type_decl',4,'p_simple_type_decl_4','parser.py',119),
  ('simple_type_decl -> SYM_SUB const_value SYM_RANGE SYM_SUB const_value','simple_type_decl',5,'p_simple_type_decl_5','parser.py',123),
  ('simple_type_decl -> ID SYM_RANGE ID','simple_type_decl',3,'p_simple_type_decl_6','parser.py',127),
  ('array_type_decl -> PAS_ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC PAS_OF type_decl','array_type_decl',6,'p_array_type_decl','parser.py',131),
  ('record_type_decl -> PAS_RECORD field_decl_list PAS_END','record_type_decl',3,'p_record_type_decl','parser.py',136),
  ('field_decl_list -> field_decl_list field_decl','field_decl_list',2,'p_field_decl_list_0','parser.py',140),
  ('field_decl_list -> field_decl','field_decl_list',1,'p_field_decl_list_1','parser.py',145),
  ('field_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON','field_decl',4,'p_field_decl','parser.py',149),
  ('name_list -> name_list SYM_COMMA ID','name_list',3,'p_name_list_0','parser.py',153),
  ('name_list -> ID','name_list',1,'p_name_list_1','parser.py',158),
  ('var_part -> PAS_VAR var_decl_list','var_part',2,'p_var_part_0','parser.py',163),
  ('var_part -> empty','var_part',1,'p_var_part_1','parser.py',167),
  ('var_decl_list -> var_decl_list var_decl','var_decl_list',2,'p_var_decl_list_0','parser.py',171),
  ('var_decl_list -> var_decl','var_decl_list',1,'p_var_decl_list_1','parser.py',176),
  ('var_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON','var_decl',4,'p_var_decl','parser.py',180),
  ('routine_part -> routine_part function_decl','routine_part',2,'p_routine_part_0','parser.py',185),
  ('routine_part -> routine_part procedure_decl','routine_part',2,'p_routine_part_1','parser.py',190),
  ('routine_part -> function_decl','routine_part',1,'p_routine_part_2','parser.py',195),
  ('routine_part -> procedure_decl','routine_part',1,'p_routine_part_3','parser.py',199),
  ('routine_part -> empty','routine_part',1,'p_routine_part_4','parser.py',203),
  ('function_decl -> function_head SYM_SEMICOLON sub_routine SYM_SEMICOLON','function_decl',4,'p_function_decl','parser.py',207),
  ('function_head -> PAS_FUNCTION ID parameters SYM_COLON simple_type_decl','function_head',5,'p_function_head','parser.py',211),
  ('procedure_decl -> procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON','procedure_decl',4,'p_procedure_decl','parser.py',215),
  ('procedure_head -> PAS_PROCEDURE ID parameters','procedure_head',3,'p_procedure_head','parser.py',219),
  ('parameters -> SYM_LPAREN para_decl_list SYM_RPAREN','parameters',3,'p_parameters_0','parser.py',223),
  ('parameters -> empty','parameters',1,'p_parameters_1','parser.py',227),
  ('para_decl_list -> para_decl_list SYM_SEMICOLON para_type_list','para_decl_list',3,'p_para_decl_list_0','parser.py',231),
  ('para_decl_list -> para_type_list','para_decl_list',1,'p_para_decl_list_1','parser.py',236),
  ('para_type_list -> var_para_list SYM_COLON simple_type_decl','para_type_list',3,'p_para_type_list_0','parser.py',240),
  ('para_type_list -> val_para_list SYM_COLON simple_type_decl','para_type_list',3,'p_para_type_list_1','parser.py',244),
  ('var_para_list -> PAS_VAR name_list','var_para_list',2,'p_var_para_list','parser.py',248),
  ('val_para_list -> name_list','val_para_list',1,'p_val_para_list','parser.py',252),
  ('routine_body -> compound_stmt','routine_body',1,'p_routine_body','parser.py',257),
  ('compound_stmt -> PAS_BEGIN stmt_list PAS_END','compound_stmt',3,'p_compound_stmt','parser.py',261),
  ('stmt_list -> stmt_list stmt SYM_SEMICOLON','stmt_list',3,'p_stmt_list_0','parser.py',265),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_1','parser.py',273),
  ('stmt -> INT SYM_COLON non_label_stmt','stmt',3,'p_stmt_0','parser.py',277),
  ('stmt -> non_label_stmt','stmt',1,'p_stmt_1','parser.py',281),
  ('non_label_stmt -> assign_stmt','non_label_stmt',1,'p_non_label_stmt_0','parser.py',285),
  ('non_label_stmt -> proc_stmt','non_label_stmt',1,'p_non_label_stmt_1','parser.py',289),
  ('non_label_stmt -> compound_stmt','non_label_stmt',1,'p_non_label_stmt_2','parser.py',293),
  ('non_label_stmt -> if_stmt','non_label_stmt',1,'p_non_label_stmt_3','parser.py',297),
  ('non_label_stmt -> repeat_stmt','non_label_stmt',1,'p_non_label_stmt_4','parser.py',301),
  ('non_label_stmt -> while_stmt','non_label_stmt',1,'p_non_label_stmt_5','parser.py',305),
  ('non_label_stmt -> for_stmt','non_label_stmt',1,'p_non_label_stmt_6','parser.py',309),
  ('non_label_stmt -> case_stmt','non_label_stmt',1,'p_non_label_stmt_7','parser.py',313),
  ('non_label_stmt -> goto_stmt','non_label_stmt',1,'p_non_label_stmt_8','parser.py',317),
  ('assign_stmt -> ID SYM_ASSIGN expression','assign_stmt',3,'p_assign_stmt_0','parser.py',321),
  ('assign_stmt -> ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression','assign_stmt',6,'p_assign_stmt_1','parser.py',325),
  ('assign_stmt -> ID SYM_PERIOD ID SYM_ASSIGN expression','assign_stmt',5,'p_assign_stmt_2','parser.py',329),
  ('proc_stmt -> ID','proc_stmt',1,'p_proc_stmt_0','parser.py',333),
  ('proc_stmt -> ID SYM_LPAREN args_list SYM_RPAREN','proc_stmt',4,'p_proc_stmt_1','parser.py',337),
  ('proc_stmt -> SYS_PROC','proc_stmt',1,'p_proc_stmt_2','parser.py',341),
  ('proc_stmt -> SYS_PROC SYM_LPAREN expression_list SYM_RPAREN','proc_stmt',4,'p_proc_stmt_3','parser.py',345),
  ('proc_stmt -> PAS_READ SYM_LPAREN factor SYM_RPAREN','proc_stmt',4,'p_proc_stmt_4','parser.py',349),
  ('if_stmt -> PAS_IF expression PAS_THEN stmt else_clause','if_stmt',5,'p_if_stmt','parser.py',353),
  ('else_clause -> PAS_ELSE stmt','else_clause',2,'p_else_clause_0','parser.py',357),
  ('else_clause -> empty','else_clause',1,'p_else_clause_1','parser.py',361),
  ('repeat_stmt -> PAS_REPEAT stmt_list PAS_UNTIL expression','repeat_stmt',4,'p_repeat_stmt','parser.py',365),
  ('while_stmt -> PAS_WHILE expression PAS_DO stmt','while_stmt',4,'p_while_stmt','parser.py',369),
  ('for_stmt -> PAS_FOR ID SYM_ASSIGN expression direction expression PAS_DO stmt','for_stmt',8,'p_for_stmt','parser.py',373),
  ('direction -> PAS_TO','direction',1,'p_direction_0','parser.py',377),
  ('direction -> PAS_DOWNTO','direction',1,'p_direction_1','parser.py',381),
  ('case_stmt -> PAS_CASE expression PAS_OF case_expr_list PAS_END','case_stmt',5,'p_case_stmt','parser.py',385),
  ('case_expr_list -> case_expr_list case_expr','case_expr_list',2,'p_case_expr_list_0','parser.py',389),
  ('case_expr_list -> case_expr','case_expr_list',1,'p_case_expr_list_1','parser.py',397),
  ('case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON','case_expr',4,'p_case_expr_0','parser.py',401),
  ('case_expr -> ID SYM_COLON stmt SYM_SEMICOLON','case_expr',4,'p_case_expr_1','parser.py',405),
  ('goto_stmt -> PAS_GOTO INT','goto_stmt',2,'p_goto_stmt','parser.py',409),
  ('expression_list -> expression_list SYM_COMMA expression','expression_list',3,'p_expression_list_0','parser.py',414),
  ('expression_list -> expression','expression_list',1,'p_expression_list_1','parser.py',420),
  ('expression -> expression SYM_GE expr','expression',3,'p_expression_0','parser.py',424),
  ('expression -> expression SYM_GT expr','expression',3,'p_expression_1','parser.py',428),
  ('expression -> expression SYM_LE expr','expression',3,'p_expression_2','parser.py',432),
  ('expression -> expression SYM_LT expr','expression',3,'p_expression_3','parser.py',436),
  ('expression -> expression SYM_EQ expr','expression',3,'p_expression_4','parser.py',440),
  ('expression -> expression SYM_NE expr','expression',3,'p_expression_5','parser.py',444),
  ('expression -> expr','expression',1,'p_expression_6','parser.py',448),
  ('expr -> expr SYM_ADD term','expr',3,'p_expr_0','parser.py',452),
  ('expr -> expr SYM_SUB term','expr',3,'p_expr_1','parser.py',456),
  ('expr -> expr PAS_OR term','expr',3,'p_expr_2','parser.py',460),
  ('expr -> term','expr',1,'p_expr_3','parser.py',464),
  ('term -> term SYM_MUL factor','term',3,'p_term_0','parser.py',468),
  ('term -> term SYM_DIV factor','term',3,'p_term_1','parser.py',472),
  ('term -> term PAS_MOD factor','term',3,'p_term_2','parser.py',476),
  ('term -> term PAS_AND factor','term',3,'p_term_3','parser.py',480),
  ('term -> factor','term',1,'p_term_4','parser.py',484),
  ('factor -> ID','factor',1,'p_factor_0','parser.py',488),
  ('factor -> ID SYM_LPAREN args_list SYM_RPAREN','factor',4,'p_factor_1','parser.py',492),
  ('factor -> SYS_FUNCT','factor',1,'p_factor_2','parser.py',496),
  ('factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN','factor',4,'p_factor_3','parser.py',500),
  ('factor -> const_value','factor',1,'p_factor_4','parser.py',504),
  ('factor -> SYM_LPAREN expression SYM_RPAREN','factor',3,'p_factor_5','parser.py',508),
  ('factor -> PAS_NOT factor','factor',2,'p_factor_6','parser.py',512),
  ('factor -> SYM_SUB factor','factor',2,'p_factor_7','parser.py',516),
  ('factor -> ID SYM_LBRAC expression SYM_RBRAC','factor',4,'p_factor_8','parser.py',520),
  ('factor -> ID SYM_PERIOD ID','factor',3,'p_factor_9','parser.py',524),
  ('args_list -> args_list SYM_COMMA expression','args_list',3,'p_args_list_0','parser.py',528),
  ('args_list -> expression','args_list',1,'p_args_list_1','parser.py',533),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',537),
]
